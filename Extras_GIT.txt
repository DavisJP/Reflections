***Variações git log***

git log --pretty=oneline
git log --pretty=oneline --max-count=2
git log --pretty=oneline --since='5 minutes ago'
git log --pretty=oneline --until='5 minutes ago'
git log --pretty=oneline --author=<your name>
git log --pretty=oneline --all
git log --all --pretty=format:'%h %cd %s (%an)' --since='7 days ago'

**git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short**

Obs:
--pretty="..." defines the format of the output.
%h is the abbreviated hash of the commit
%d are any decorations on that commit (e.g. branch heads or tags)
%ad is the author date
%s is the comment
%an is the author name
--graph informs git to display the commit tree in an ASCII graph layout
--date=short keeps the date format nice and short

------------------------------------------------------------------------
***TAGS***

git tag v1
git checkout v1^
git checkout v1~1
git checkout v1

------------------------------------------------------------------------
***Desfazendo commits***

git revert HEAD (faz um novo commit que remove a alteração do ultimo commit -  não é uma boa prática pois mantém os 2 commits no histórico)
git reset --hard v1

------------------------------------------------------------------------
***Branches Remotos***
git clone
origin : normalmente é nome default do repositório original
git fetch ("Traz as alterações" do master original para o origin/master)
git merge origin/master ("Traz as alterações" do origin/master para o master)
git pull (git fetch + git merge origin/master)
